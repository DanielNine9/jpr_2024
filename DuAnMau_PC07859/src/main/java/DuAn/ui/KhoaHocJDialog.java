/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DuAn.ui;

import DuAn.dao.ChuyenDeDAO;
import DuAn.dao.HocVienDAO;
import DuAn.dao.KhoaHocDAO;//Thêm khóa học DAO
import DuAn.entity.ChuyenDe;
import DuAn.entity.HocVien;
import DuAn.entity.KhoaHoc;//Thêm khóa học
import DuAn.entity.NguoiHoc;
import DuAn.myenum.MyType;
import static DuAn.myenum.MyType.CURRENT;
import static DuAn.myenum.MyType.DELETED;
import DuAn.utils.Auth;
import DuAn.utils.Common;
import DuAn.utils.MsgBox;
import DuAn.utils.XDate;
import DuAn.utils.XExcel;
import DuAn.utils.XPDF;
import static java.awt.Color.pink;
import static java.awt.Color.white;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author dinhh
 */
public class KhoaHocJDialog extends javax.swing.JFrame {

    MyType myType = MyType.ALL;
    HocVienDAO hocVienDAO = new HocVienDAO();

    /**
     * Creates new form QuanLiKhoaHoc_Frame
     */
    public KhoaHocJDialog() {
        initComponents();
        setTitle("Quản Lí Khóa Học");
        //setIcon();
        this.calendarNgayTao.setText(XDate.toString(new Date(), "dd/mm/yyyy"));
        init();
        AutoCompleteDecorator.decorate(cboChuyenDe);
        AutoCompleteDecorator.decorate(cbo);

    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fpt.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        pnlEdit = new javax.swing.JPanel();
        txtTenCD = new javax.swing.JTextField();
        txtThoiLuong = new javax.swing.JTextField();
        txtManv = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnFirts = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        txtHocPhi = new javax.swing.JTextField();
        calendarKhaiGiang = new com.toedter.calendar.JDateChooser();
        calendarNgayTao = new javax.swing.JTextField();
        pnlList = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblKhoaHoc = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        cbo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÍ KHÓA HỌC");

        txtTenCD.setEditable(false);
        txtTenCD.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTenCD.setForeground(new java.awt.Color(255, 0, 51));
        txtTenCD.setBorder(javax.swing.BorderFactory.createTitledBorder("Chuyên đề"));
        txtTenCD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTenCDKeyTyped(evt);
            }
        });

        txtThoiLuong.setEditable(false);
        txtThoiLuong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtThoiLuong.setBorder(javax.swing.BorderFactory.createTitledBorder("Thời lượng ( giờ )"));
        txtThoiLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtThoiLuongKeyTyped(evt);
            }
        });

        txtManv.setEditable(false);
        txtManv.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtManv.setBorder(javax.swing.BorderFactory.createTitledBorder("Người tạo"));
        txtManv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManvKeyTyped(evt);
            }
        });

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.setBorder(javax.swing.BorderFactory.createTitledBorder("Ghi chú"));
        jScrollPane1.setViewportView(txtGhiChu);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Accept.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Refresh.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnFirts.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        btnFirts.setText("|<");
        btnFirts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirtsActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        btnBack.setText("<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Segoe UI Historic", 2, 18)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        txtHocPhi.setEditable(false);
        txtHocPhi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtHocPhi.setBorder(javax.swing.BorderFactory.createTitledBorder("Học phí"));
        txtHocPhi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHocPhiKeyTyped(evt);
            }
        });

        calendarKhaiGiang.setBorder(javax.swing.BorderFactory.createTitledBorder("Ngày khai giảng"));
        calendarKhaiGiang.setDateFormatString("dd/MM/yyyy");
        calendarKhaiGiang.setMinSelectableDate(new java.util.Date(-62135791091000L));
        calendarKhaiGiang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calendarKhaiGiangKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calendarKhaiGiangKeyTyped(evt);
            }
        });

        calendarNgayTao.setEditable(false);
        calendarNgayTao.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        calendarNgayTao.setBorder(javax.swing.BorderFactory.createTitledBorder("Ngày tạo"));
        calendarNgayTao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                calendarNgayTaoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(btnFirts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTenCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(txtManv, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHocPhi, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtThoiLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addComponent(calendarNgayTao))
                            .addComponent(calendarKhaiGiang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(calendarKhaiGiang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtThoiLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calendarNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnMoi)
                    .addComponent(btnFirts)
                    .addComponent(btnBack)
                    .addComponent(btnLast)
                    .addComponent(btnNext))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tabs.addTab("CẬP NHẬT", pnlEdit);

        tblKhoaHoc.setAutoCreateRowSorter(true);
        tblKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MÃ KH", "CHUYÊN ĐỀ", "THỜI LƯỢNG", "HỌC PHÍ", "KHAI GIẢNG", "TẠO BỞI", "NGÀY TẠO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblKhoaHoc);

        jLabel3.setText("Lọc:");

        cbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Khóa học tồn tại", "Khóa học đã xóa" }));
        cbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/pdf.png"))); // NOI18N
        jButton1.setText("PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/excel.png"))); // NOI18N
        jButton2.setText("Excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        tabs.addTab("DANH SÁCH", pnlList);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cboChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChuyenDeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("CHUYÊN ĐỀ :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(cboChuyenDe))
                .addGap(14, 14, 14))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÍ KHÓA HỌC");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(329, 329, 329))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoaHocMouseClicked
        //click chọn khóa học trên table
        if (evt.getClickCount() == 1) {

            this.row = tblKhoaHoc.rowAtPoint(evt.getPoint());
            if (this.row >= 0) {
                btnXoa.setVisible(true);
                this.edit();
                tabs.setSelectedIndex(0);

            }
        }
    }//GEN-LAST:event_tblKhoaHocMouseClicked

    private void btnFirtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirtsActionPerformed
        this.first();
    }//GEN-LAST:event_btnFirtsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.prev();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (validateForm()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (MsgBox.showConfirmDialog(this, "Bạn thực sự muốn cập nhật khóa học này")) {
            if (validateForm()) {
                this.update();
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.clear();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void cboChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChuyenDeActionPerformed
        this.chonchuyenDe();
    }//GEN-LAST:event_cboChuyenDeActionPerformed

    private void cboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboActionPerformed
        // TODO add your handling code here:
        switch (this.cbo.getSelectedIndex()) {
            case 0:
                myType = MyType.ALL;
                break;
            case 1:
                myType = MyType.CURRENT;
                break;
            default:
                myType = MyType.DELETED;
                break;
        }
        fillTable(myType);

    }//GEN-LAST:event_cboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        List<KhoaHoc> employeeList = dao.selectAll();

        // Create an instance of NhanVien to pass to the writeExcel method
        KhoaHoc instance = new KhoaHoc(); // Assuming NhanVien has a no-argument constructor

        try {
            // Specify the file path where the Excel file will be saved
            String filePath = "DachSachKhoaHoc.xlsx";

            // Call the writeExcel method from XExcel class
            String excelFilePath = XExcel.writeExcel(this, employeeList, filePath, instance);

            // Print the path where the Excel file is saved
            System.out.println("Excel file created successfully at: " + excelFilePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        List<KhoaHoc> employeeList = dao.selectAll();

        // Convert NhanVien objects to NhanVienPDF objects
        // Generate PDF for employees
        String title = "Thong tin khoa hoc";
        String filePath = "DachSachKhoaHoc.pdf";
        XPDF.generatePdf(this, title, employeeList, filePath);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void calendarKhaiGiangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calendarKhaiGiangKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_calendarKhaiGiangKeyPressed

    private void calendarKhaiGiangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calendarKhaiGiangKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_calendarKhaiGiangKeyTyped

    private void txtTenCDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenCDKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtTenCDKeyTyped

    private void txtHocPhiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHocPhiKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtHocPhiKeyTyped

    private void txtThoiLuongKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThoiLuongKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtThoiLuongKeyTyped

    private void txtManvKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManvKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtManvKeyTyped

    private void calendarNgayTaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calendarNgayTaoKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_calendarNgayTaoKeyTyped

    public boolean validateForm() {
        Date khaiGiangDate = calendarKhaiGiang.getDate();
        Date currentDate = new Date();

        if (khaiGiangDate == null) {
            MsgBox.showMessageDialog(this, "Vui lòng nhập chính xác ngày");
            return false;
        }

        Calendar calKhaiGiang = Calendar.getInstance();
        calKhaiGiang.setTime(khaiGiangDate);
        calKhaiGiang.set(Calendar.HOUR_OF_DAY, 0);
        calKhaiGiang.set(Calendar.MINUTE, 0);
        calKhaiGiang.set(Calendar.SECOND, 0);
        calKhaiGiang.set(Calendar.MILLISECOND, 0);

        Calendar calCurrentDate = Calendar.getInstance();
        calCurrentDate.setTime(currentDate);
        calCurrentDate.set(Calendar.HOUR_OF_DAY, 0);
        calCurrentDate.set(Calendar.MINUTE, 0);
        calCurrentDate.set(Calendar.SECOND, 0);
        calCurrentDate.set(Calendar.MILLISECOND, 0);

        if (calKhaiGiang.equals(calCurrentDate) || calKhaiGiang.after(calCurrentDate)) {
            return true;
        } else {
            MsgBox.showMessageDialog(this, "Ngày khai giảng phải là ngày hiện tại hoặc sau ngày hiện tại");
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhoaHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhoaHocJDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFirts;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private com.toedter.calendar.JDateChooser calendarKhaiGiang;
    private javax.swing.JTextField calendarNgayTao;
    private javax.swing.JComboBox<String> cbo;
    private javax.swing.JComboBox<String> cboChuyenDe;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblKhoaHoc;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtManv;
    private javax.swing.JTextField txtTenCD;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables

    int row = -1;  //vị trí khoaHoc đang được chọn    
    KhoaHocDAO dao = new KhoaHocDAO();
    ChuyenDeDAO cddao = new ChuyenDeDAO();

    void init() {
        setLocationRelativeTo(null);
        tabs.setSelectedIndex(1);

        this.fillComboBox();
        myType = MyType.ALL;
        this.fillTable(myType);
        this.clear();
    }

    void fillComboBox() { //đổ dữ liệu chuyende lên combobox
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChuyenDe.getModel(); //kết nối model với cbo
        model.removeAllElements();   //xóa toàn bộ item của cbo
        try {
            List<ChuyenDe> list = cddao.selectAll();
            for (ChuyenDe cd : list) {
                if (!cd.isDeleted()) {
                    model.addElement(cd);    //thêm đối tượng (Object) vào model
                }
            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    //thay đổi thời lượng vào học phí trên form theo chuyên đề đc chọn ở combobox

    void chonchuyenDe() {
        ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();
        //lấy 1 Object được chọn từ combobox
        //có thể điền và lấy 1 Object từ combobox
//        System.out.println("Chuyên đề :" +chuyenDe);
        txtThoiLuong.setText(String.valueOf(chuyenDe.getThoiLuong()));
        if (chuyenDe.getHocPhi() == (int) chuyenDe.getHocPhi()) {
            txtHocPhi.setText(String.valueOf((int) chuyenDe.getHocPhi()));
        } else {
            txtHocPhi.setText(String.valueOf(chuyenDe.getHocPhi()));
        }
        txtTenCD.setText(chuyenDe.getTenCD());
        txtGhiChu.setText(chuyenDe.getTenCD());

        this.fillTable(myType);
        this.row = -1;
        makh = -1;
        this.updateStatus();
        tabs.setSelectedIndex(1);
    }

    // đổ toàn bộ khoaHoc từ CSDL vào bảng
    void fillTable(MyType type) {
        DefaultTableModel model = (DefaultTableModel) tblKhoaHoc.getModel();

        model.setRowCount(0);

        try {
            ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();
            List<KhoaHoc> list = dao.selectByChuyenDe(chuyenDe.getMaCD()); //hiển thị khóa học theo chuyên đề được chọn

            List<KhoaHoc> current = new ArrayList<>();//đọc dữ liệu từ CSDL
            switch (type) {
                case CURRENT:
                    for (KhoaHoc cd : list) {
                        if (!cd.isDeleted()) {
                            current.add(cd);
                        }
                    }
                    break;
                case DELETED:
                    for (KhoaHoc cd : list) {
                        if (cd.isDeleted()) {
                            current.add(cd);
                        }
                    }
                    break;
                default:
                    current = list;
                    break;
            }

            for (KhoaHoc kh : current) {
                Object[] row = {
                    "KH" + kh.getMaKH(),
                    "CD" + kh.getMaCD(),
                    kh.getThoiLuong(),
                    Common.formatVietnameseMoney(kh.getHocPhi()),
                    XDate.toString(kh.getNgayKG(), "dd/MM/yyyy"),
                    "NV" + kh.getMaNV(),
                    XDate.toString(kh.getNgayTao(), "dd/MM/yyyy")
                };

                model.addRow(row);

            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void insert() {

        KhoaHoc model = getModel();

        try {

            dao.insert(model);
            this.fillTable(myType);
            this.clear();
            MsgBox.showMessageDialog(this, "Thêm mới khóa học thành công!");
        } catch (Exception e) {
            System.out.println(e.getMessage());
            MsgBox.showMessageDialog(this, "Thêm mới khóa học thất bại!");
        }
    }

    void update() {
        //lấy thông tin trên form cho vào đt khoaHoc
        //cập nhật bản ghi trong CSDL theo maKH và thông tin khác từ đt khoaHoc
        //load lại bảng    
        KhoaHoc model = getModel();
        try {
            dao.update(model);
            this.fillTable(myType);
            MsgBox.showMessageDialog(this, "Cập nhật khóa học thành công!");
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Cập nhật khóa học thất bại!");
            e.printStackTrace();
        }
    }
    int makh = -1;

    void delete() {
        //xóa bản ghi trong CSDL theo maKH lấu trên form
        //load lại bảng, xóa trắng form, chuyển sang insertable    
        if ((this.btnXoa.getText().equalsIgnoreCase("Xóa")
                && MsgBox.showConfirmDialog(this, "Bạn thực sự muốn xóa khóa học này?"))
                || MsgBox.showConfirmDialog(this, "Bạn thực sự muốn khôi phục khóa học này?")) {
            try {
                Integer.parseInt(String.valueOf(tblKhoaHoc.getValueAt(this.row, 0)).substring(2)); //maKH để nhờ ở toolTipText
                makh = Integer.parseInt(String.valueOf(tblKhoaHoc.getValueAt(this.row, 0)).substring(2)); //maKH để nhờ ở toolTipText
            } catch (Exception ex) {

            }
            try {
                if (this.btnXoa.getText().equalsIgnoreCase("Xóa")) {
                    List<HocVien> list = hocVienDAO.selectByKhoaHoc(makh);
                    List<HocVien> listChuaXoa = new ArrayList<>();
                    for (HocVien hv : list) {
                        if (!hv.isDeleted()) {
                            listChuaXoa.add(hv);
                        }
                    }
                    if (listChuaXoa.size() > 0) {
                        MsgBox.showMessageDialog(this, "Khóa học đã có " + listChuaXoa.size() + " học viên, không thể xóa");
                        return;
                    }
                    dao.delete(makh, true);
                    MsgBox.showMessageDialog(this, "Xóa khóa học thành công!");
                    this.btnXoa.setText("Khôi phục");
                    fillTable(myType);
                } else {
                    Integer macd = Integer.valueOf(tblKhoaHoc.getValueAt(row, 1).toString().substring(2));
                    ChuyenDeDAO cddao = new ChuyenDeDAO();
                    ChuyenDe cd = cddao.selectById(macd);
                    if (cd.isDeleted()) {
                        MsgBox.showMessageDialog(this, "Chuyên đề của khóa học này đã bị xóa");
                        return;
                    }
                    dao.delete(makh, false);
                    MsgBox.showMessageDialog(this, "Khôi phục khóa học thành công!");
                    this.btnXoa.setText("Xóa");
                    fillTable(myType);
                }
                setIconXoa();

            } catch (Exception e) {
                System.out.println(e.getMessage());
                MsgBox.showMessageDialog(this, "Xóa khóa học thất bại!");
            }
        }
    }

    public void setTrang() {
    }

    void clear() {//xóa trắng form, chuyển sang insertable
        setTrang();
        KhoaHoc model = new KhoaHoc();
        ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();//lấy chuyenDe đang đc chọn ở combobox
        model.setMaCD(chuyenDe.getMaCD());
        model.setMaNV(Auth.user.getMaNV());   //người tạo là nhanVien đang đăng nhập
        model.setNgayKG(XDate.add(30));  //ngày khai giảng sau ngày tạo 30 ngày
        model.setNgayTao(XDate.now());   //ngày tạo là ngày hiện tại
        model.setHocPhi(chuyenDe.getHocPhi());
        this.btnThem.setEnabled(true);
        makh = -1;
        row = -1;
        model.setThoiLuong(chuyenDe.getThoiLuong());
        this.setModel(model);
        updateStatus();
        this.btnThem.setEnabled(true);
        btnXoa.setVisible(false);
        txtGhiChu.requestFocus();

    }

    void edit() {
        //lấy maKH từ bảng theo index, lấy đt khoaHoc từ CSDL theo maKH
        // đưa thông tin từ đt khoaHoc lên form, chuyển sang editable    
        setTrang();
        try {
            String makh = ((String) tblKhoaHoc.getValueAt(this.row, 0));
            KhoaHoc model = dao.selectById(Integer.parseInt(makh.substring(2)));
            if (model != null) {
                this.setModel(model);
                this.updateStatus();
            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void setIconXoa() {
        ImageIcon img;
        if (btnXoa.getText() == "Khôi phục") {
            img = new ImageIcon("icon/Bell.png");
        } else {
            img = new ImageIcon("icon/Delete.png");
        }
        btnXoa.setIcon(new ImageIcon(img.getImage()));
    }

    void setModel(KhoaHoc model) {    //điền thông tin từ đt khoaHoc vào form
        cboChuyenDe.setToolTipText(String.valueOf(model.getMaKH()));
        //để nhờ maKH ở tooltipText vì ko có chỗ để trên form
        //vì maKH này trong CSDL là tự sinh từ 1 đến hết ko cần nhập trên form
        cboChuyenDe.getModel().setSelectedItem(cddao.selectById(model.getMaCD()));
        //lưu ý thêm getModel() khi áp dụng với đối tượng, ko cần thêm khi dùng với String VD: cbo.setSelectedItem("Item A");
        //tìm đt chuyenDe theo maCD rồi setSelectedItem cho combobox

        calendarKhaiGiang.setDate(model.getNgayKG());
        txtHocPhi.setText(Common.formatVietnameseMoney(model.getHocPhi()));

        txtManv.setText("NV" + String.valueOf(model.getMaNV()));
        this.calendarNgayTao.setText(XDate.toString(model.getNgayTao(), "dd/MM/yyyy"));
        txtGhiChu.setText(model.getGhiChu());
        if (model.isDeleted()) {
            this.btnXoa.setText("Khôi phục");
        } else {
            this.btnXoa.setText("Xóa");
        }
        setIconXoa();
    }

    KhoaHoc getModel() {    //lấy thông tin khoaHoc từ form, return khoaHoc
        KhoaHoc model = new KhoaHoc();
        ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();
        model.setMaCD(chuyenDe.getMaCD());
        model.setNgayKG(calendarKhaiGiang.getDate());
        model.setNgayTao(new Date());
        try {
            model.setHocPhi(Common.parseVietnameseMoney(txtHocPhi.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(KhoaHocJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        model.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
        model.setGhiChu(txtGhiChu.getText());
        model.setMaNV(Auth.user.getMaNV());
        model.setNgayTao(new Date());
        if (this.row != -1) {
            model.setMaKH(Integer.parseInt(String.valueOf(tblKhoaHoc.getValueAt(this.row, 0)).substring(2)));
        }

        return model;
    }

    void updateStatus() { //cập nhật trạng thái form
        boolean edit = (this.row >= 0); //đang chọn một hàng nào đó ->> trạng thái edit
        boolean first = (this.row == 0); //đang ở bản ghi đầu tiên 
        boolean last = (this.row == tblKhoaHoc.getRowCount() - 1); // đang ở bản ghi cuối cùng    

        //trạng thái form
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnXoa.setVisible(edit);

        //trạng thái điều hướng 
        btnFirts.setEnabled(edit && !first);
        btnBack.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tblKhoaHoc.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = tblKhoaHoc.getRowCount() - 1;
        this.edit();
    }

    public boolean check5Ngay(JTextField txt, JTextField txt2) { //kiểm tra ngày khai giảng phải sau ngày tạo là 5 ngày
        txt.setBackground(white);
        Date date = XDate.toDate(txt.getText(), "dd/MM/yyyy");
        Date date2 = XDate.toDate(txt2.getText(), "dd/MM/yyyy");
        Calendar c1 = Calendar.getInstance();
        Calendar c2 = Calendar.getInstance();
        c1.setTime(date);
        c2.setTime(date2);
        long a = (c1.getTime().getTime() - c2.getTime().getTime()) / (24 * 3600 * 1000);
        if (a >= 5) {
            return true;
        } else {
            txt.setBackground(pink);
            MsgBox.showMessageDialog(this, " Ngày khai giảng phải cách ngày tạo ít nhất 5 ngày.");
            return false;
        }
    }

}
