/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DuAn.ui;

import DuAn.constant.Constant;
import DuAn.dao.HocVienDAO;
import DuAn.dao.NguoiHocDAO;//Thêm NguoiHocDAO
import DuAn.entity.NguoiHoc;//Thêm NguoiHoc
import DuAn.myenum.MyType;
import static DuAn.myenum.MyType.CURRENT;
import static DuAn.myenum.MyType.DELETED;
import DuAn.utils.Auth;
import DuAn.utils.MsgBox;
import DuAn.utils.XDate;//Thêm XDate để lấy ngày đăng ký
import DuAn.utils.XExcel;
import DuAn.utils.XImage;
import DuAn.utils.XPDF;
import java.awt.Color;
import static java.awt.Color.white;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author dinhh
 */
public class NguoiHocJDialog extends javax.swing.JFrame {

    MyType myType = MyType.ALL;
    ArrayList<NguoiHoc> currentList = new ArrayList<>();

    /**
     * Creates new form QuanLiNguoiHoc_Frame
     */
    public NguoiHocJDialog() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản Lí Người Học");
        this.lblHinhAnh.setToolTipText("ong140.png");
        System.out.println(this.lblHinhAnh.getToolTipText());
        //setIcon();
        init();
        AutoCompleteDecorator.decorate(cbo);
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fpt.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tabs = new javax.swing.JTabbedPane();
        pnlList = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNguoiHoc = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pnlEdit = new javax.swing.JPanel();
        lblMaNguoiHoc = new javax.swing.JLabel();
        txtMaNH = new javax.swing.JTextField();
        lblHoTen = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblGioiTinh = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnFirts = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblHinhAnh = new javax.swing.JLabel();
        calendarDate = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÍ NGƯỜI HỌC");
        setPreferredSize(new java.awt.Dimension(845, 650));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("QUẢN LÍ NGƯỜI HỌC");

        tabs.setPreferredSize(new java.awt.Dimension(807, 550));

        tbNguoiHoc.setAutoCreateRowSorter(true);
        tbNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "SDT", "EMAIL", "MÃ NV", "NGÀY ĐK", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbNguoiHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNguoiHocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbNguoiHoc);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder("Họ và tên"));
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        lblTimKiem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTimKiem.setText("TÌM KIẾM");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem)
                    .addComponent(lblTimKiem))
                .addContainerGap())
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/filter.png"))); // NOI18N
        jLabel1.setText("Lọc:");

        cbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Người học đang học", "Người học đã xóa" }));
        cbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/excel.png"))); // NOI18N
        jButton1.setText("Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/pdf.png"))); // NOI18N
        jButton2.setText("PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlListLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE))))
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(286, 286, 286))
        );

        tabs.addTab("DANH SÁCH", pnlList);

        lblMaNguoiHoc.setText("Mã người học :");

        txtMaNH.setEditable(false);
        txtMaNH.setText("ID sẽ tự sinh");
        txtMaNH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaNHFocusGained(evt);
            }
        });

        lblHoTen.setText("Họ và tên :");

        txtHoTen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHoTenKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoTenKeyTyped(evt);
            }
        });

        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSDTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSDTKeyTyped(evt);
            }
        });

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        lblGioiTinh.setText("Giới tính :");

        lblSDT.setText("Điện thoại :");

        lblEmail.setText("Địa chỉ email :");

        lblNgaySinh.setText("Ngày sinh :");

        lblGhiChu.setText("Ghi chú :");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGhiChuKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtGhiChu);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Accept.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Refresh.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnFirts.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFirts.setText("|<");
        btnFirts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirtsActionPerformed(evt);
            }
        });

        btnPrev.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblHinhAnh.setBackground(new java.awt.Color(51, 0, 255));
        lblHinhAnh.setForeground(new java.awt.Color(255, 255, 255));
        lblHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/images/ong140.png"))); // NOI18N
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        calendarDate.setDateFormatString("dd/MM/yyyy");
        calendarDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calendarDateKeyPressed(evt);
            }
        });

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlEditLayout.createSequentialGroup()
                                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlEditLayout.createSequentialGroup()
                                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMaNguoiHoc)
                                            .addComponent(lblGioiTinh))
                                        .addGap(179, 179, 179)
                                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblHoTen)
                                            .addComponent(lblNgaySinh)))
                                    .addGroup(pnlEditLayout.createSequentialGroup()
                                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                                                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18))
                                            .addGroup(pnlEditLayout.createSequentialGroup()
                                                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(4, 4, 4)))
                                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(calendarDate, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlEditLayout.createSequentialGroup()
                                        .addComponent(txtMaNH, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))))
                        .addGap(22, 22, 22))
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFirts, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaNguoiHoc)
                            .addComponent(lblHoTen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaNH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(lblNgaySinh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(calendarDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(lblSDT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGhiChu))
                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnMoi)
                    .addComponent(btnPrev)
                    .addComponent(btnFirts)
                    .addComponent(btnLast)
                    .addComponent(btnNext))
                .addGap(237, 237, 237))
        );

        tabs.addTab("CẬP NHẬT", pnlEdit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbNguoiHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNguoiHocMouseClicked
        if (evt.getClickCount() == 1) {
            btnXoa.setVisible(true);
            this.row = tbNguoiHoc.getSelectedRow();
            this.edit();
            tabs.setSelectedIndex(1);
        }
    }//GEN-LAST:event_tbNguoiHocMouseClicked

    public static boolean isVietnamesePhoneNumber(String number) {
        String vietnamesePhoneRegex = "^(03|05|07|08|09|01[2|6|8|9])+([0-9]{8})\\b";
        Pattern pattern = Pattern.compile(vietnamesePhoneRegex);
        Matcher matcher = pattern.matcher(number);
        return matcher.matches();
    }

    private boolean isValidEmail(String email) {
        Pattern pattern = Pattern.compile("^[A-Za-z0-9+_.-]+@(.+)$");
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }


    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (validateForm()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (validateForm()) {
            this.update();
        } else {
            MsgBox.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin !");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.clearForm();
        generateId();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirtsActionPerformed
        this.first();
    }//GEN-LAST:event_btnFirtsActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtMaNHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNHFocusGained
        txtMaNH.setBackground(white);
    }//GEN-LAST:event_txtMaNHFocusGained

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased

        this.timKiem();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        this.chonAnh();
    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void generateId() {
        try {
            String id = dao.generateNewUserId();
            txtMaNH.setText(id);
        } catch (SQLException ex) {
            Logger.getLogger(NhanVienJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboActionPerformed
        System.out.println(cbo.getSelectedIndex());
        switch (this.cbo.getSelectedIndex()) {
            case 0:
                myType = MyType.ALL;
                break;
            case 1:
                myType = MyType.CURRENT;
                break;
            default:
                myType = MyType.DELETED;
                break;
        }
        fillTable(myType);
        // TODO add your handling code here:
    }//GEN-LAST:event_cboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        List<NguoiHoc> employeeList = dao.selectAll();

        // Create an instance of NhanVien to pass to the writeExcel method
        NguoiHoc instance = new NguoiHoc(); // Assuming NhanVien has a no-argument constructor

        try {
            // Specify the file path where the Excel file will be saved
            String filePath = "DachSachNguoiHoc.xlsx";

            // Call the writeExcel method from XExcel class
            String excelFilePath = XExcel.writeExcel(this, employeeList, filePath, instance);

            // Print the path where the Excel file is saved
            System.out.println("Excel file created successfully at: " + excelFilePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        List<NguoiHoc> employeeList = dao.selectAll();

        // Convert NhanVien objects to NhanVienPDF objects
        // Generate PDF for employees
        String title = "Thong tin nguoi hoc";
        String filePath = "DachSachNguoiHoc.pdf";
        XPDF.generatePdf(this, title, employeeList, filePath);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtHoTenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoTenKeyPressed
        // TODO add your handling code here:
        txtHoTen.setBorder(Constant.GRAY_BORDER);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtHoTenKeyPressed

    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
        // TODO add your handling code here:       
        txtSDT.setBorder(Constant.GRAY_BORDER);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtSDTKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
        txtEmail.setBorder(Constant.GRAY_BORDER);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtGhiChuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGhiChuKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnThemActionPerformed(null);
        }
    }//GEN-LAST:event_txtGhiChuKeyPressed

    private void calendarDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calendarDateKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnThemActionPerformed(null);
        }
    }//GEN-LAST:event_calendarDateKeyPressed

    private void txtHoTenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoTenKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenKeyTyped

    private void txtSDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtSDTKeyReleased

    private void txtSDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyTyped
        // TODO add your handling code here:
        if (this.txtSDT.getText().length() >= 10 || !Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSDTKeyTyped
    private File file;

    void chonAnh() {

        JFileChooser jfc = new JFileChooser("images");
        // mở đến thư mục theo đường dẫn 
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();
//            XImage.save(file); //lưu hình ảnh vào thư mục images
            ImageIcon icon = XImage.read(file.getName()); //đọc hình từ logo
            try {
                Image img = ImageIO.read(file);
                int width = lblHinhAnh.getWidth();
                int height = lblHinhAnh.getHeight();
                lblHinhAnh.setIcon(new ImageIcon(img.getScaledInstance(width, height, 0))); //set hình vừa với khung của jlabel
                lblHinhAnh.setToolTipText(XImage.save(file)); //giữ tên hình trong tooltip
            } catch (IOException ex) {
                MsgBox.showErrorDialog(this, ex.getMessage(), "Error");
            }
//                lblHinhAnh.setIcon(icon);

        }
    }

    public boolean checkTrungMa(JTextField txt) {
        txt.setBackground(white);
        if (dao.selectById(Integer.parseInt(txt.getText())) == null) {
            return true;
        } else {
            txt.setBackground(Color.pink);
            MsgBox.showMessageDialog(this, "Mã người học " + txt.getText() + " đã tồn tại");
            return false;
        }
    }

    public boolean validateForm() {
        String error = "";

        if (txtMaNH.getText().isEmpty() || txtHoTen.getText().isEmpty() || txtEmail.getText().isEmpty()
                || txtSDT.getText().isEmpty()) {
            MsgBox.showErrorDialog(this, "Vui lòng nhập đầy đủ thông tin", "Lỗi");
            return false;
        }

        Date ngaysinh = calendarDate.getDate();
        if (ngaysinh == null) {
            MsgBox.showMessageDialog(this, "Vui lòng nhập chính xác ngày sinh");
            return false;
        }

        if (!isValidEmail(txtEmail.getText())) {
            error += "Phải đúng định dạng email";
            txtEmail.setBorder(Constant.RED_BORDER);
            txtEmail.requestFocus();
        }

        if (!isVietnamesePhoneNumber(txtSDT.getText())) {
            txtSDT.setBorder(Constant.RED_BORDER);
            txtSDT.requestFocus();
            error += "\nPhải là số điện thoại Việt Nam (Đầu 03, 05, 07, 08, 09 và phải đủ 10 số)";
        }

        Calendar currentDate = Calendar.getInstance();
        Calendar birthDate = Calendar.getInstance();
        birthDate.setTime(calendarDate.getDate());

        int age = currentDate.get(Calendar.YEAR) - birthDate.get(Calendar.YEAR);

        if (age < 10) {
            error += "\nSinh viên phải từ 10 tuổi trở lên\n";
        }

        if (!error.isEmpty()) {
            MsgBox.showErrorDialog(this, error, "Lỗi");
        }

        return error.isEmpty(); // Trả về true nếu không có lỗi
    }

    private boolean containsNumber(String input) {
        Pattern pattern = Pattern.compile(".*\\d.*");
        Matcher matcher = pattern.matcher(input);
        return matcher.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NguoiHocJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NguoiHocJDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirts;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser calendarDate;
    private javax.swing.JComboBox<String> cbo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGioiTinh;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMaNguoiHoc;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tbNguoiHoc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    int row = -1;

    void init() {
        this.clearForm();
        this.fillTable(myType);
        this.updateStatus();
        txtHoTen.requestFocus();
    }

    NguoiHocDAO dao = new NguoiHocDAO();
    HocVienDAO daoHV = new HocVienDAO();

    void fillTable(MyType type) {
        //tìm kiếm người học theo keyword rồi đổ list người học vào bảng
        //nếu không có keywork trong ô tìm kiếm thì đổ toàn bộ người học trong CSDL vào bảng
        DefaultTableModel model = (DefaultTableModel) tbNguoiHoc.getModel();
        model.setRowCount(0);
        try {

            //tìm người học theo keywork
            //nếu ko có keywork thì sẽ là tất cả người học
            String keyword = txtTimKiem.getText();

            List<NguoiHoc> list = new ArrayList<>();//đọc dữ liệu từ CSDL
            switch (type) {
                case CURRENT:
                    for (NguoiHoc cd : dao.selectAll()) {
                        if (!cd.isDeleted()) {
                            list.add(cd);
                        }
                    }
                    break;
                case DELETED:
                    for (NguoiHoc cd : dao.selectAll()) {
                        if (cd.isDeleted()) {
                            list.add(cd);
                        }
                    }
                    break;
                default:
                    list = dao.selectAll();
                    break;
            }
            currentList = (ArrayList<NguoiHoc>) list;
            for (NguoiHoc nh : list) {
                Object[] row = {
                    "NH" + nh.getMaNH(),
                    nh.getHoTen(),
                    nh.isGioiTinh() ? "Nam" : "Nữ",
                    XDate.toString(nh.getNgaySinh(), "dd/MM/yyyy"),
                    nh.getDienThoai(),
                    nh.getEmail(),
                    "NV" + nh.getMaNV(),
                    XDate.toString(nh.getNgayDK(), "dd/MM/yyyy"),
                    nh.isDeleted() ? "Thôi học" : "Đang học"
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void setIconXoa() {
        ImageIcon img;
        if (btnXoa.getText() == "Khôi phục") {
            img = new ImageIcon("icon/Bell.png");
        } else {
            img = new ImageIcon("icon/Delete.png");
        }
        btnXoa.setIcon(new ImageIcon(img.getImage()));
    }

    void setForm(NguoiHoc nh) {//điền thông tin từ đối tượng nguoiHoc lên form
        txtMaNH.setText("NH" + String.valueOf(nh.getMaNH()));
        txtHoTen.setText(nh.getHoTen());
        if (nh.isGioiTinh()) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }

        if (nh.isDeleted()) {
            btnXoa.setText("Khôi phục");
        } else {
            btnXoa.setText("Xóa");
        }
        setIconXoa();

        calendarDate.setDate(nh.getNgaySinh());
        txtSDT.setText(nh.getDienThoai());
        txtEmail.setText(nh.getEmail());
        txtGhiChu.setText(nh.getGhiChu());
        System.out.println(nh.getHinh());
        String hinh = nh.getHinh() == null || nh.getHinh().isBlank() || nh.getHinh().isEmpty() ? "ong140.png" : nh.getHinh();
        lblHinhAnh.setToolTipText(hinh);
        setImg(hinh);

    }

    private void setImg(String path) {
        ImageIcon img = new ImageIcon("images\\" + path);
        Image img1 = img.getImage();
        Image img2 = img1.getScaledInstance(148, 191, Image.SCALE_SMOOTH);
        lblHinhAnh.setIcon(new ImageIcon(img2));
    }

    NguoiHoc getForm() {
        //lấy thông trên form  cho vào đối tượng nguoiHoc
        //return nguoiHoc
        NguoiHoc nh = new NguoiHoc();
        nh.setHoTen(txtHoTen.getText());
        nh.setGioiTinh(rdoNam.isSelected());
        nh.setNgaySinh(calendarDate.getDate());
        nh.setDienThoai(txtSDT.getText());
        nh.setEmail(txtEmail.getText());
        nh.setGhiChu(txtGhiChu.getText());
        nh.setMaNV(Auth.user.getMaNV());

        nh.setNgayDK(new Date());
        nh.setHinh(lblHinhAnh.getToolTipText() == null || lblHinhAnh.getToolTipText().isEmpty() || lblHinhAnh.getToolTipText().isBlank() ? "ong140.png" : lblHinhAnh.getToolTipText());

        System.out.println(nh.getHinh());

        return nh;
    }

    void clearForm() {//xóa trắng form
        NguoiHoc nh = new NguoiHoc();
        this.row = -1;
        this.updateStatus();
        this.setForm(nh);

        this.txtMaNH.setEditable(false);
        this.txtMaNH.setText("ID sẽ tự sinh");

        calendarDate.setDate(new Date());
        txtMaNH.setBackground(white);
        lblHinhAnh.setIcon(null);
        btnXoa.setVisible(false);
        setImg("ong140.png");
        txtHoTen.requestFocus();

//        nh.setNgaySinh(XDate.toDate("01/01/2010", "dd/MM/yyyy"));
    }

    void edit() {
        //lấy manh theo index, lấy đt nguohoc từ CSDL theo manh 
        //hiển thị thông tin từ đt chuyenDe lên form, chuyển sang edit form        
        String manh = ((String) tbNguoiHoc.getValueAt(this.row, 0)).substring(2);
        NguoiHoc nh = dao.selectById(Integer.parseInt(manh));
        this.setForm(nh);
        this.updateStatus();
        this.txtMaNH.setText("NH" + nh.getMaNH());
    }

    void updateStatus() {//cập nhật trạng thái form
        boolean edit = (this.row >= 0); //đang chọn một hàng nào đó ->> trạng thái edit
        boolean first = (this.row == 0); //đang ở bản ghi đầu tiên 
        boolean last = (this.row == tbNguoiHoc.getRowCount() - 1); // đang ở bản ghi cuối cùng    

        //trạng thái form
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);

        //trạng thái điều hướng 
        btnFirts.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        generateId();
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tbNguoiHoc.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = tbNguoiHoc.getRowCount() - 1;
        this.edit();
    }

    private void handleTimKiem(String search) {
        DefaultTableModel model = (DefaultTableModel) tbNguoiHoc.getModel();
        model.setRowCount(0);
        try {

            //tìm người học theo keywork
            //nếu ko có keywork thì sẽ là tất cả người học
            ArrayList<NguoiHoc> list = new ArrayList<>();
            for (NguoiHoc nh : currentList) {
                if (nh.getHoTen().toLowerCase().contains(search.toLowerCase())) {
                    list.add(nh);
                }
            }

            if (!list.isEmpty()) {
                for (NguoiHoc nh : list) {
                    Object[] row = {
                        "NH" +nh.getMaNH(),
                        nh.getHoTen(),
                        nh.isGioiTinh() ? "Nam" : "Nữ",
                        XDate.toString(nh.getNgaySinh(), "dd/MM/yyyy"),
                        nh.getDienThoai(),
                        nh.getEmail(),
                        nh.getMaNV(),
                        XDate.toString(nh.getNgayDK(), "dd/MM/yyyy")
                    };
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void timKiem() {//tìm kiếm người học theo keyword
        this.handleTimKiem(this.txtTimKiem.getText());
        this.clearForm();
        this.row = -1;
        this.updateStatus();
    }

    void insert() {
        //lấy thông tin trên form để
        //thêm 1 nguoiHoc mới vào CSDL
        NguoiHoc model = getForm();

        try {
            dao.insert(model);
            this.fillTable(myType);
            this.clearForm();
            MsgBox.showMessageDialog(this, "Thêm mới người học thành công");
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Thêm mới người học thất bại !");
            e.printStackTrace();
        }
    }

    void update() {
        //lấy thông tin trên form
        //để chỉnh sửa nguoiHoc trong CSDL theo maNH
        NguoiHoc model = getForm();
        try {
            model.setMaNH(Integer.parseInt(this.txtMaNH.getText().substring(2)));
            dao.update(model);
            this.fillTable(myType);
            MsgBox.showMessageDialog(this, "Cập nhật người học thành công");
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Cập nhật người học thất bại !");
            e.printStackTrace();
        }
    }

    void delete() {
        //xóa bản ghi khỏi CSDL theo maNH lấy trên form
        //xóa trằng form    
        if (!Auth.isManager()) {//kiểm tra nếu kh phải trưởng phòng thì kh được xóa
            MsgBox.showMessageDialog(this, "Bạn không có quyền xóa người học !");
        } else {
            if (MsgBox.showConfirmDialog(this, "Bạn có muốn xóa người học này không ?")) {
                Integer macd = Integer.valueOf(txtMaNH.getText().substring(2));
                try {
                    if (this.btnXoa.getText().equalsIgnoreCase("Xóa")) {
                        if (daoHV.selectByNH(macd) == null) {
                            dao.delete(macd, true);
                            MsgBox.showMessageDialog(this, "Xóa người học thành công");
                            this.btnXoa.setText("Khôi phục");
                        } else {
                            MsgBox.showMessageDialog(this, "Người học đang học nên không thể xóa!");
                        }

                    } else {
                        dao.delete(macd, false);
                        MsgBox.showMessageDialog(this, "Khôi phục người học thành công");
                        this.btnXoa.setText("Xóa");
                    }
                    this.fillTable(myType);
                    setIconXoa();

                } catch (Exception e) {
                    MsgBox.showMessageDialog(this, "Không thể xóa người học ");
                    e.printStackTrace();
                }
            }
        }
    }

}
