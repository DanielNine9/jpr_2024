/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DuAn.ui;

import DuAn.dao.ChuyenDeDAO;//Chuyển đề DAO
import DuAn.dao.KhoaHocDAO;
import DuAn.entity.ChuyenDe;//Thự thể chuyên đề
import DuAn.entity.KhoaHoc;
import DuAn.utils.Auth;//Thư viện kiểm tra đã đăng nhập chưa
import DuAn.utils.MsgBox;//Thư viện hỗ trợ hiển thị hộp thoại
import DuAn.utils.XImage;//Thư viện hỗ trợ xử lý hình ảnh
import java.awt.Color;
import static java.awt.Color.white;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jfree.ui.RefineryUtilities;
import DuAn.myenum.MyType;
import DuAn.utils.Common;
import DuAn.utils.XExcel;
import DuAn.utils.XPDF;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author dinhh
 */
public class ChuyenDeJDialog extends javax.swing.JFrame {

    MyType myType = MyType.ALL;

    /**
     * Creates new form QuanLiChuyenDe_Frame
     */
    public ChuyenDeJDialog() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản Lí Chuyên Đề");
        //setIcon();
        init();
        AutoCompleteDecorator.decorate(cbo);
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fpt.png"))); //set logo cho ứng dụng
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        tabs = new javax.swing.JTabbedPane();
        pnlEdit = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblHinhAnh = new javax.swing.JLabel();
        txtMaCD = new javax.swing.JTextField();
        txtHocPhi = new javax.swing.JTextField();
        txtTenCD = new javax.swing.JTextField();
        txtThoiLuong = new javax.swing.JTextField();
        lblMoTa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        pnlList = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblChuyenDe = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbo = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÍ CHUYÊN ĐỀ");

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblTitle.setText("QUẢN LÍ CHUYÊN ĐỀ");

        jLabel3.setText("Hình logo :");

        lblHinhAnh.setBackground(new java.awt.Color(51, 0, 255));
        lblHinhAnh.setForeground(new java.awt.Color(255, 255, 255));
        lblHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/images/ong140.png"))); // NOI18N
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        txtMaCD.setEditable(false);
        txtMaCD.setText("ID sẽ tự sinh");
        txtMaCD.setBorder(javax.swing.BorderFactory.createTitledBorder("Mã chuyên đề"));
        txtMaCD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaCDFocusGained(evt);
            }
        });

        txtHocPhi.setBorder(javax.swing.BorderFactory.createTitledBorder("Học phí ( VNĐ )"));
        txtHocPhi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHocPhiKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHocPhiKeyTyped(evt);
            }
        });

        txtTenCD.setBorder(javax.swing.BorderFactory.createTitledBorder("Tên chuyên đề"));
        txtTenCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenCDActionPerformed(evt);
            }
        });
        txtTenCD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTenCDKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTenCDKeyTyped(evt);
            }
        });

        txtThoiLuong.setBorder(javax.swing.BorderFactory.createTitledBorder("Thời lượng ( số giờ )"));
        txtThoiLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtThoiLuongKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtThoiLuongKeyTyped(evt);
            }
        });

        lblMoTa.setText("Mô tả chuyên đề :");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        txtMoTa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMoTaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtMoTa);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Accept.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Refresh.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/Bar chart.png"))); // NOI18N
        jButton1.setText("Biểu Đồ Thống Kê");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 60, Short.MAX_VALUE))))
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlEditLayout.createSequentialGroup()
                            .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlEditLayout.createSequentialGroup()
                                    .addGap(35, 35, 35)
                                    .addComponent(lblMoTa))
                                .addGroup(pnlEditLayout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(47, 47, 47)
                            .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtHocPhi, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtThoiLuong, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTenCD, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMaCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtThoiLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jButton1)
                .addGap(4, 4, 4)
                .addComponent(lblMoTa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst)
                        .addComponent(btnPrev)
                        .addComponent(btnNext)
                        .addComponent(btnLast))
                    .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMoi)
                        .addComponent(btnSua)
                        .addComponent(btnThem)))
                .addGap(21, 21, 21))
        );

        tabs.addTab("CẬP NHẬT", pnlEdit);

        tblChuyenDe.setAutoCreateRowSorter(true);
        tblChuyenDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MÃ CĐ", "TÊN CĐ", "HỌC PHÍ ", "THỜI LƯỢNG", "HÌNH"
            }
        ));
        tblChuyenDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChuyenDeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblChuyenDe);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/filter.png"))); // NOI18N
        jLabel1.setText("Lọc:");

        cbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Chuyên đề đang học", "Chuyên đề đã xóa" }));
        cbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/pdf.png"))); // NOI18N
        jButton2.setText("PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DuAn/icon/excel.png"))); // NOI18N
        jButton3.setText("Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListLayout = new javax.swing.GroupLayout(pnlList);
        pnlList.setLayout(pnlListLayout);
        pnlListLayout.setHorizontalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlListLayout.setVerticalGroup(
            pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListLayout.createSequentialGroup()
                .addGap(0, 34, Short.MAX_VALUE)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(47, 47, 47))
        );

        tabs.addTab("DANH SÁCH", pnlList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(281, 281, 281))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (validateForm()) {
            insert();
        } else {
            MsgBox.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin !");
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (MsgBox.showConfirmDialog(this, "Bạn thực sự muốn cập nhật chuyên đề này không ?")) {
            if (validateForm()) {
                this.update();
            } else {
                MsgBox.showMessageDialog(this, "Bạn chưa nhập đầy đủ thông tin !");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void lblHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        this.chonAnh();
    }//GEN-LAST:event_lblHinhAnhMouseClicked

    public static String removeDecimalZero(double number) {
        // Convert double to string
        String numberStr = Double.toString(number);

        // Check if the number has a decimal point and ends with ".0"
        if (numberStr.contains(".") && numberStr.endsWith(".0")) {
            // Remove the decimal point and trailing zero
            return numberStr.substring(0, numberStr.length() - 2);
        } else {
            // If no decimal point or not ending with ".0", return the original string
            return numberStr;
        }
    }

    private void tblChuyenDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChuyenDeMouseClicked
        if (evt.getClickCount() == 1) {
            btnXoa.setVisible(true);
            this.row = tblChuyenDe.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblChuyenDeMouseClicked

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtMaCDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaCDFocusGained
        txtMaCD.setBackground(white);
    }//GEN-LAST:event_txtMaCDFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        chart();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboActionPerformed
        // TODO add your handling code here:
        switch (this.cbo.getSelectedIndex()) {
            case 0:
                myType = MyType.ALL;
                break;
            case 1:
                myType = MyType.CURRENT;
                break;
            default:
                myType = MyType.DELETED;
                break;
        }
        fillTable(myType);
    }//GEN-LAST:event_cboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        List<ChuyenDe> employeeList = dao.selectAll();

        // Convert NhanVien objects to NhanVienPDF objects
        // Generate PDF for employees
        String title = "Thong tin chuyen de";
        String filePath = "DachSachChuyenDe.pdf";
        XPDF.generatePdf(this, title, employeeList, filePath);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        List<ChuyenDe> employeeList = dao.selectAll();

        // Create an instance of NhanVien to pass to the writeExcel method
        ChuyenDe instance = new ChuyenDe(); // Assuming NhanVien has a no-argument constructor

        try {
            // Specify the file path where the Excel file will be saved
            String filePath = "DachSachChuyenDe.xlsx";

            // Call the writeExcel method from XExcel class
            String excelFilePath = XExcel.writeExcel(this, employeeList, filePath, instance);

            // Print the path where the Excel file is saved
            System.out.println("Excel file created successfully at: " + excelFilePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtTenCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCDActionPerformed

    private void txtTenCDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenCDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtTenCDKeyPressed

    private void txtThoiLuongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThoiLuongKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtThoiLuongKeyPressed

    private void txtHocPhiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHocPhiKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtHocPhiKeyPressed

    private void txtMoTaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMoTaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btnThem.isEnabled()) {
                btnThemActionPerformed(null);
            } else {
                btnSuaActionPerformed(null);
            }
        }
    }//GEN-LAST:event_txtMoTaKeyPressed

    private void txtThoiLuongKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtThoiLuongKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); // Ignore the event if the character is not a digit or a decimal point
        }
    }//GEN-LAST:event_txtThoiLuongKeyTyped

    private void txtHocPhiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHocPhiKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); // Ignore the event if the character is not a digit or a decimal point
        }
    }//GEN-LAST:event_txtHocPhiKeyTyped

    private void txtTenCDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenCDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCDKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChuyenDeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChuyenDeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChuyenDeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChuyenDeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChuyenDeJDialog().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JLabel lblMoTa;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlList;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChuyenDe;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtMaCD;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtTenCD;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables

    public boolean checkTrungMa(JTextField txt) {
        txt.setBackground(white);
        if (dao.selectById(Integer.valueOf(txt.getText())) == null) {
            return true;
        } else {
            txt.setBackground(Color.pink);
            MsgBox.showMessageDialog(this, "Mã chuyên đề " + txt.getText() + " đã tồn tại");
            return false;
        }
    }

    int row = -1; //chứa vị trị hiện hành của chuyên đề
    /*
        Thêm ChuyenDeDAO Data Access Diagram
        Thêm ChuyenDe Entity
     */
    ChuyenDeDAO dao = new ChuyenDeDAO();

    private void generateId() {
        try {
            String id = dao.generateNewUserId();
            txtMaCD.setText(id);
        } catch (SQLException ex) {
            Logger.getLogger(NhanVienJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean validateForm() {
        if (txtTenCD.getText().isEmpty() || txtHocPhi.getText().isEmpty() || txtThoiLuong.getText().isEmpty()) {
            return false;
        }
        return true;
    }

    void chart() {
        BarChartExample chart = new BarChartExample("Biểu đồ", dao.getChart());
        chart.pack();
        RefineryUtilities.centerFrameOnScreen(chart);
        chart.setVisible(true);
    }

    void init() {
        this.clearForm();
        this.fillTable(MyType.ALL);
        this.row = -1;
        this.updateStatus();
        txtTenCD.requestFocus();
        lblHinhAnh.setToolTipText("ong140.png");
    }

    void fillTable(MyType type) {    //Đổ toàn bộ chuyenDe từ CSDL vào bảng 
        DefaultTableModel model = (DefaultTableModel) tblChuyenDe.getModel();
        model.setRowCount(0); //xóa tất cả các hàng trên jtable
        try {
            List<ChuyenDe> list = new ArrayList<>();//đọc dữ liệu từ CSDL
            switch (type) {
                case CURRENT:
                    for (ChuyenDe cd : dao.selectAll()) {
                        if (!cd.isDeleted()) {
                            list.add(cd);
                        }
                    }
                    break;
                case DELETED:
                    for (ChuyenDe cd : dao.selectAll()) {
                        if (cd.isDeleted()) {
                            list.add(cd);
                        }
                    }
                    break;
                default:
                    list = dao.selectAll();
                    break;
            }
            for (ChuyenDe cd : list) {
                Object[] row = {
                    "CD" + cd.getMaCD(),
                    cd.getTenCD(),
                    Common.formatVietnameseMoney(cd.getHocPhi()),
                    cd.getThoiLuong(),
                    cd.getHinh()
                };
                model.addRow(row); //thêm một hàng vào jtable
            }
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void setIconXoa() {
        ImageIcon img;
        if (btnXoa.getText() == "Khôi phục") {
            img = new ImageIcon("icon/Bell.png");
        } else {
            img = new ImageIcon("icon/Delete.png");
        }
        btnXoa.setIcon(new ImageIcon(img.getImage()));
    }

    void setForm(ChuyenDe cd) {
        //lấy thông tin từ đt chuyenDe đưa lên form
        //lưu ý lấy hình ảnh từ thư mục logos đưa lên form theo tenFile lấy từ chuyenDe
        txtMaCD.setText("CD" + String.valueOf(cd.getMaCD()));
        txtTenCD.setText(cd.getTenCD());
        txtThoiLuong.setText(String.valueOf(cd.getThoiLuong()));
        txtHocPhi.setText(removeDecimalZero(cd.getHocPhi()));
        txtMoTa.setText(cd.getMoTa());
        if (cd.getHinh() != null) {
            String hinh = String.valueOf(cd.getHinh()); //Screenshot 2023-07-07 153852.png
            lblHinhAnh.setToolTipText(cd.getHinh());
            lblHinhAnh.setIcon(XImage.read(cd.getHinh()));//Khúc này có vấn đề
            setImg(hinh);
        }
        if (cd.isDeleted()) {
            btnXoa.setText("Khôi phục");
        } else {
            btnXoa.setText("Xóa");
        }
        setIconXoa();
    }

    private void setImg(String path) {
        ImageIcon img = new ImageIcon("images\\" + path);
        Image img1 = img.getImage();
        Image img2 = img1.getScaledInstance(148, 191, Image.SCALE_SMOOTH);
        lblHinhAnh.setIcon(new ImageIcon(img2));
    }

    ChuyenDe getForm() {
        //lấy thông tin trên form điền vào đt chuyenDe
        //return chuyenDe      

        ChuyenDe cd = new ChuyenDe();
        cd.setTenCD(this.txtTenCD.getText());
        cd.setThoiLuong(Integer.parseInt(txtThoiLuong.getText()));
        cd.setHocPhi(Double.parseDouble(txtHocPhi.getText()));
        cd.setMoTa(txtMoTa.getText());
        cd.setHinh(lblHinhAnh.getToolTipText() == null || lblHinhAnh.getToolTipText().isEmpty() || lblHinhAnh.getToolTipText().isBlank() ? "ong140.png" : lblHinhAnh.getToolTipText());

        return cd;
    }

    void edit() {
        //lấy maCD theo index, lấy đt chuyenDe từ CSDL theo maCD 
        //hiển thị thông tin từ đt chuyenDe lên form, chuyển sang edit form
        try {
            String macd = ((String) tblChuyenDe.getValueAt(this.row, 0)).substring(2); //
            ChuyenDe cd = dao.selectById(Integer.parseInt(macd));
            this.setForm(cd);
            this.updateStatus();
            tabs.setSelectedIndex(0);
            this.txtMaCD.setText("CD" + cd.getMaCD());
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    void updateStatus() { //cập nhật trạng thái form
        boolean edit = (this.row >= 0); //đang chọn một hàng nào đó ->> trạng thái edit
        boolean first = (this.row == 0); //đang ở bản ghi đầu tiên 
        boolean last = (this.row == tblChuyenDe.getRowCount() - 1); // đang ở bản ghi cuối cùng    

        //trạng thái form
        btnThem.setEnabled(!edit); //kh edit ->> btnthêm hiện lên và ngược lại
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);

        //trạng thái điều hướng 
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        generateId();
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tblChuyenDe.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = tblChuyenDe.getRowCount() - 1;
        this.edit();
    }

    void insert() {
        /*
    lấy thông tin trên form, thêm bản ghi chuyenDe mới vào CSDL
    load lại bảng
    xóa trắng form
         */
        ChuyenDe model = getForm();
        for (ChuyenDe x : dao.selectAll()) {
            if (x.getTenCD().equals(model.getTenCD())) {
                MsgBox.showMessageDialog(this, "Tên chuyên đã tồn tại");
                return;
            }
        }
        try {
            dao.insert(model);
            this.fillTable(MyType.CURRENT);
            this.clearForm();
            MsgBox.showMessageDialog(this, "Thêm mới chuyên đề thành công");
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Thêm mới chuyên đề thất bại!");
            e.printStackTrace();
        }
    }

    void update() {
        //lấy thông tin trên form, cập nhật vào bản ghi CSDL theo maCD
        //load lại bảng
        ChuyenDe model = getForm();
        model.setMaCD(Integer.parseInt(this.txtMaCD.getText().substring(2)));
        try {
            dao.update(model);
            this.fillTable(MyType.CURRENT);
            this.clearForm();
            MsgBox.showMessageDialog(this, "Cập nhật chuyên đề thành công");
        } catch (Exception e) {
            MsgBox.showMessageDialog(this, "Cập nhật chuyên đề thất bại !");
            e.printStackTrace();
        }
    }

    void delete() {
        //xóa bản ghi trong CSDL theo maCD lấy trên form
        //load lại bảng
        //xóa trắng form           
        if (!Auth.isManager()) { //kiểm tra không phải trưởng phòng 
            MsgBox.showMessageDialog(this, "Bạn không có quyền xóa chuyên đề !");
        } else {

            if ((btnXoa.getText().equalsIgnoreCase("Xóa") && MsgBox.showConfirmDialog(this, "Bạn có muốn xóa chuyên đề không ?")) || MsgBox.showConfirmDialog(this, "Bạn có muốn khôi phục chuyên đề không ?")) {
                Integer macd = Integer.valueOf(txtMaCD.getText().substring(2));
                try {
                    if (btnXoa.getText().equalsIgnoreCase("Xóa")) {
                        KhoaHocDAO khdao = new KhoaHocDAO();
                        List<KhoaHoc> list = khdao.selectByChuyenDe(macd);
                        List<KhoaHoc> listChuaXoa = new ArrayList<>();
                        for (KhoaHoc kh : list) {
                            if (!kh.isDeleted()) {
                                listChuaXoa.add(kh);
                            }
                        }
                        if (listChuaXoa.size() > 0) {
                            MsgBox.showMessageDialog(this, "Chuyên đề này có " + listChuaXoa.size() + " khóa học, không thể xóa chuyên đề");
                            return;
                        }
                        dao.delete(macd, true);
                        MsgBox.showMessageDialog(this, "Xóa chuyên đề thành công");
                        this.btnXoa.setText("Khôi phục");
                        fillTable(myType);
                    } else {
                        dao.delete(macd, false);
                        MsgBox.showMessageDialog(this, "Khôi phục chuyên đề thành công");
                        this.btnXoa.setText("Xóa");
                        fillTable(myType);
                    }
                    setIconXoa();
                } catch (Exception e) {
                    MsgBox.showMessageDialog(this, "Không thể xóa chuyên đề ");
                    e.printStackTrace();
                }
            }
        }
    }

    void clearForm() { //xóa trắng form
        this.setForm(new ChuyenDe());
        this.row = -1;
        this.updateStatus();
        setImg("ong140.png");
        txtMaCD.setBackground(white);
        generateId();
        txtTenCD.requestFocus();
        btnXoa.setVisible(false);

    }

    private File file;

    void chonAnh() {

        JFileChooser jfc = new JFileChooser("images");
        // mở đến thư mục theo đường dẫn 
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();
//            XImage.save(file); //lưu hình ảnh vào thư mục images
            ImageIcon icon = XImage.read(file.getName()); //đọc hình từ logo
            try {
                Image img = ImageIO.read(file);
                int width = lblHinhAnh.getWidth();
                int height = lblHinhAnh.getHeight();
                lblHinhAnh.setIcon(new ImageIcon(img.getScaledInstance(width, height, 0))); //set hình vừa với khung của jlabel
                lblHinhAnh.setToolTipText(XImage.save(file)); //giữ tên hình trong tooltip
            } catch (IOException ex) {
                MsgBox.showErrorDialog(this, ex.getMessage(), "Error");
            }
//                lblHinhAnh.setIcon(icon);

        }
    }
}
